{"ast":null,"code":"var _ApiService;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:9080'; // Change avec l'URL de ton backend\n  }\n  // Gestion des projets\n  getProjects() {\n    return this.http.get(`${this.apiUrl}/project`);\n  }\n  createProject(project) {\n    return this.http.post(`${this.apiUrl}/project`, project);\n  }\n  // Gestion des tâches\n  getTasksByProject(projectId) {\n    return this.http.get(`${this.apiUrl}/project/${projectId}/tasks`);\n  }\n  createTask(projectId, task) {\n    return this.http.post(`${this.apiUrl}/project/${projectId}/tasks`, task);\n  }\n}\n_ApiService = ApiService;\n_ApiService.ɵfac = function ApiService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\n_ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _ApiService,\n  factory: _ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","getProjects","get","createProject","project","post","getTasksByProject","projectId","createTask","task","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hsmbn\\Desktop\\Stage PFE\\nv\\test technique\\newfolder\\Nouveau dossier\\ProjectManager\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Project } from '../models/project';\r\nimport { Task } from '../models/task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private apiUrl = 'http://localhost:9080'; // Change avec l'URL de ton backend\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Gestion des projets\r\n  getProjects(): Observable<Project[]> {\r\n    return this.http.get<Project[]>(`${this.apiUrl}/project`);\r\n  }\r\n\r\n  createProject(project: Project): Observable<Project> {\r\n    return this.http.post<Project>(`${this.apiUrl}/project`, project);\r\n  }\r\n\r\n  // Gestion des tâches\r\n  getTasksByProject(projectId: string): Observable<Task[]> {\r\n    return this.http.get<Task[]>(`${this.apiUrl}/project/${projectId}/tasks`);\r\n  }\r\n\r\n  createTask(projectId: string, task: Task): Observable<Task> {\r\n    return this.http.post<Task>(`${this.apiUrl}/project/${projectId}/tasks`, task);\r\n  }\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEH;EAEvC;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EAC3D;EAEAG,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,GAAG,IAAI,CAACL,MAAM,UAAU,EAAEI,OAAO,CAAC;EACnE;EAEA;EACAE,iBAAiBA,CAACC,SAAiB;IACjC,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,YAAYO,SAAS,QAAQ,CAAC;EAC3E;EAEAC,UAAUA,CAACD,SAAiB,EAAEE,IAAU;IACtC,OAAO,IAAI,CAACV,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,YAAYO,SAAS,QAAQ,EAAEE,IAAI,CAAC;EAChF;;cArBWZ,UAAU;;mCAAVA,WAAU,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVhB,WAAU;EAAAiB,OAAA,EAAVjB,WAAU,CAAAkB,IAAA;EAAAC,UAAA,EAFT;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}