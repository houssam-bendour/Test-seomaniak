{"ast":null,"code":"var _TaskFormPage;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/router\";\nexport class TaskFormPage {\n  constructor(apiService, route, router) {\n    this.apiService = apiService;\n    this.route = route;\n    this.router = router;\n    this.task = {\n      id: '',\n      title: '',\n      description: '',\n      status: 'pending',\n      dueDate: '',\n      projectId: ''\n    };\n    this.projectId = '';\n    this.projectId = this.route.snapshot.paramMap.get('id');\n  }\n  saveTask() {\n    this.task.projectId = this.projectId;\n    this.apiService.createTask(this.projectId, this.task).subscribe(() => {\n      this.router.navigate(['/task-list', this.projectId]);\n    });\n  }\n}\n_TaskFormPage = TaskFormPage;\n_TaskFormPage.ɵfac = function TaskFormPage_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _TaskFormPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\n_TaskFormPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _TaskFormPage,\n  selectors: [[\"app-task-form\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[\"position\", \"floating\"], [3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", 3, \"click\"]],\n  template: function TaskFormPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Nouvelle T\\u00E2che\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-item\")(6, \"ion-label\", 0);\n      i0.ɵɵtext(7, \"Titre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ion-input\", 1);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskFormPage_Template_ion_input_ngModelChange_8_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.task.title, $event) || (ctx.task.title = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 0);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ion-input\", 1);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskFormPage_Template_ion_input_ngModelChange_12_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.task.description, $event) || (ctx.task.description = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-button\", 2);\n      i0.ɵɵlistener(\"click\", function TaskFormPage_Template_ion_button_click_13_listener() {\n        return ctx.saveTask();\n      });\n      i0.ɵɵtext(14, \"Enregistrer\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.task.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.task.description);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["TaskFormPage","constructor","apiService","route","router","task","id","title","description","status","dueDate","projectId","snapshot","paramMap","get","saveTask","createTask","subscribe","navigate","i0","ɵɵdirectiveInject","i1","ApiService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","TaskFormPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","TaskFormPage_Template_ion_input_ngModelChange_8_listener","$event","ɵɵtwoWayBindingSet","TaskFormPage_Template_ion_input_ngModelChange_12_listener","ɵɵlistener","TaskFormPage_Template_ion_button_click_13_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\hsmbn\\Desktop\\Stage PFE\\nv\\test technique\\newfolder\\Nouveau dossier\\ProjectManager\\src\\app\\pages\\task-form\\task-form.page.ts","C:\\Users\\hsmbn\\Desktop\\Stage PFE\\nv\\test technique\\newfolder\\Nouveau dossier\\ProjectManager\\src\\app\\pages\\task-form\\task-form.page.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-task-form',\r\n//   templateUrl: './task-form.page.html',\r\n//   styleUrls: ['./task-form.page.scss'],\r\n// })\r\n// export class TaskFormPage implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit() {\r\n//   }\r\n\r\n// }\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Task } from '../../models/task';\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  templateUrl: './task-form.page.html',\r\n  styleUrls: ['./task-form.page.scss'],\r\n})\r\nexport class TaskFormPage {\r\n  task: Task = { id: '', title: '', description: '', status: 'pending', dueDate: '', projectId: '' };\r\n  projectId: string = '';\r\n\r\n  constructor(private apiService: ApiService, private route: ActivatedRoute, private router: Router) {\r\n    this.projectId = this.route.snapshot.paramMap.get('id')!;\r\n  }\r\n\r\n  saveTask() {\r\n    this.task.projectId = this.projectId;\r\n    this.apiService.createTask(this.projectId, this.task).subscribe(() => {\r\n      this.router.navigate(['/task-list', this.projectId]);\r\n    });\r\n  }\r\n}\r\n","<!-- <ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-title>task-form</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">task-form</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n</ion-content> -->\r\n<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Nouvelle Tâche</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-item>\r\n    <ion-label position=\"floating\">Titre</ion-label>\r\n    <ion-input [(ngModel)]=\"task.title\"></ion-input>\r\n  </ion-item>\r\n  <ion-item>\r\n    <ion-label position=\"floating\">Description</ion-label>\r\n    <ion-input [(ngModel)]=\"task.description\"></ion-input>\r\n  </ion-item>\r\n  <ion-button expand=\"full\" (click)=\"saveTask()\">Enregistrer</ion-button>\r\n</ion-content>\r\n"],"mappings":";;;;AAyBA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,UAAsB,EAAUC,KAAqB,EAAUC,MAAc;IAA7E,KAAAF,UAAU,GAAVA,UAAU;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAHzF,KAAAC,IAAI,GAAS;MAAEC,EAAE,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,OAAO,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAE,CAAE;IAClG,KAAAA,SAAS,GAAW,EAAE;IAGpB,IAAI,CAACA,SAAS,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;EAC1D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACV,IAAI,CAACM,SAAS,GAAG,IAAI,CAACA,SAAS;IACpC,IAAI,CAACT,UAAU,CAACc,UAAU,CAAC,IAAI,CAACL,SAAS,EAAE,IAAI,CAACN,IAAI,CAAC,CAACY,SAAS,CAAC,MAAK;MACnE,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,CAACP,SAAS,CAAC,CAAC;IACtD,CAAC,CAAC;EACJ;;gBAbWX,YAAY;;mCAAZA,aAAY,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,MAAA;AAAA;;QAAZzB,aAAY;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVrBb,EAFJ,CAAAe,cAAA,iBAAY,kBACG,gBACA;MAAAf,EAAA,CAAAgB,MAAA,0BAAc;MAE7BhB,EAF6B,CAAAiB,YAAA,EAAY,EACzB,EACH;MAITjB,EAFJ,CAAAe,cAAA,kBAAa,eACD,mBACuB;MAAAf,EAAA,CAAAgB,MAAA,YAAK;MAAAhB,EAAA,CAAAiB,YAAA,EAAY;MAChDjB,EAAA,CAAAe,cAAA,mBAAoC;MAAzBf,EAAA,CAAAkB,gBAAA,2BAAAC,yDAAAC,MAAA;QAAApB,EAAA,CAAAqB,kBAAA,CAAAP,GAAA,CAAA5B,IAAA,CAAAE,KAAA,EAAAgC,MAAA,MAAAN,GAAA,CAAA5B,IAAA,CAAAE,KAAA,GAAAgC,MAAA;QAAA,OAAAA,MAAA;MAAA,EAAwB;MACrCpB,EADsC,CAAAiB,YAAA,EAAY,EACvC;MAETjB,EADF,CAAAe,cAAA,eAAU,oBACuB;MAAAf,EAAA,CAAAgB,MAAA,mBAAW;MAAAhB,EAAA,CAAAiB,YAAA,EAAY;MACtDjB,EAAA,CAAAe,cAAA,oBAA0C;MAA/Bf,EAAA,CAAAkB,gBAAA,2BAAAI,0DAAAF,MAAA;QAAApB,EAAA,CAAAqB,kBAAA,CAAAP,GAAA,CAAA5B,IAAA,CAAAG,WAAA,EAAA+B,MAAA,MAAAN,GAAA,CAAA5B,IAAA,CAAAG,WAAA,GAAA+B,MAAA;QAAA,OAAAA,MAAA;MAAA,EAA8B;MAC3CpB,EAD4C,CAAAiB,YAAA,EAAY,EAC7C;MACXjB,EAAA,CAAAe,cAAA,qBAA+C;MAArBf,EAAA,CAAAuB,UAAA,mBAAAC,mDAAA;QAAA,OAASV,GAAA,CAAAlB,QAAA,EAAU;MAAA,EAAC;MAACI,EAAA,CAAAgB,MAAA,mBAAW;MAC5DhB,EAD4D,CAAAiB,YAAA,EAAa,EAC3D;;;MAPCjB,EAAA,CAAAyB,SAAA,GAAwB;MAAxBzB,EAAA,CAAA0B,gBAAA,YAAAZ,GAAA,CAAA5B,IAAA,CAAAE,KAAA,CAAwB;MAIxBY,EAAA,CAAAyB,SAAA,GAA8B;MAA9BzB,EAAA,CAAA0B,gBAAA,YAAAZ,GAAA,CAAA5B,IAAA,CAAAG,WAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}