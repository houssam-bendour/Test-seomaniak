{"ast":null,"code":"var _TaskListPage;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction TaskListPage_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.description);\n  }\n}\nexport class TaskListPage {\n  constructor(apiService, route) {\n    this.apiService = apiService;\n    this.route = route;\n    this.tasks = [];\n    this.projectId = '';\n  }\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.apiService.getTasksByProject(this.projectId).subscribe(data => {\n      this.tasks = data;\n    });\n  }\n}\n_TaskListPage = TaskListPage;\n_TaskListPage.ɵfac = function TaskListPage_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _TaskListPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_TaskListPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _TaskListPage,\n  selectors: [[\"app-task-list\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function TaskListPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"T\\u00E2ches\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\");\n      i0.ɵɵtemplate(6, TaskListPage_ion_item_6_Template, 6, 2, \"ion-item\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonTitle, i4.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","title","description","TaskListPage","constructor","apiService","route","tasks","projectId","ngOnInit","snapshot","paramMap","get","getTasksByProject","subscribe","data","ɵɵdirectiveInject","i1","ApiService","i2","ActivatedRoute","selectors","decls","vars","consts","template","TaskListPage_Template","rf","ctx","ɵɵtemplate","TaskListPage_ion_item_6_Template","ɵɵproperty"],"sources":["C:\\Users\\hsmbn\\Desktop\\Stage PFE\\nv\\test technique\\newfolder\\Nouveau dossier\\ProjectManager\\src\\app\\pages\\task-list\\task-list.page.ts","C:\\Users\\hsmbn\\Desktop\\Stage PFE\\nv\\test technique\\newfolder\\Nouveau dossier\\ProjectManager\\src\\app\\pages\\task-list\\task-list.page.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-task-list',\r\n//   templateUrl: './task-list.page.html',\r\n//   styleUrls: ['./task-list.page.scss'],\r\n// })\r\n// export class TaskListPage implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit() {\r\n//   }\r\n\r\n// }\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Task } from '../../models/task';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  standalone: true, // Ajout de standalone\r\n  imports: [CommonModule, IonicModule], // Ajout des imports nécessaires\r\n  templateUrl: './task-list.page.html',\r\n  styleUrls: ['./task-list.page.scss'],\r\n})\r\nexport class TaskListPage implements OnInit {\r\n  tasks: Task[] = [];\r\n  projectId: string = '';\r\n\r\n  constructor(private apiService: ApiService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    this.projectId = this.route.snapshot.paramMap.get('id')!;\r\n    this.apiService.getTasksByProject(this.projectId).subscribe((data) => {\r\n      this.tasks = data;\r\n    });\r\n  }\r\n}\r\n","<!-- <ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-title>task-list</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">task-list</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n</ion-content> -->\r\n<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Tâches</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-list>\r\n    <ion-item *ngFor=\"let task of tasks\">\r\n      <ion-label>\r\n        <h2>{{ task.title }}</h2>\r\n        <p>{{ task.description }}</p>\r\n      </ion-label>\r\n    </ion-item>\r\n  </ion-list>\r\n</ion-content>\r\n"],"mappings":";;;;;;;;ICuBQA,EAFJ,CAAAC,cAAA,eAAqC,gBACxB,SACL;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAsB;IAE7BF,EAF6B,CAAAG,YAAA,EAAI,EACnB,EACH;;;;IAHHH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAgB;IACjBP,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAE,WAAA,CAAsB;;;ADMjC,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB,EAAUC,KAAqB;IAArD,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAHzD,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,SAAS,GAAW,EAAE;EAEsD;EAE5EC,QAAQA,CAAA;IACN,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACxD,IAAI,CAACP,UAAU,CAACQ,iBAAiB,CAAC,IAAI,CAACL,SAAS,CAAC,CAACM,SAAS,CAAEC,IAAI,IAAI;MACnE,IAAI,CAACR,KAAK,GAAGQ,IAAI;IACnB,CAAC,CAAC;EACJ;;gBAXWZ,YAAY;;mCAAZA,aAAY,EAAAT,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAxB,EAAA,CAAAsB,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;;QAAZjB,aAAY;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCfrBjC,EAFJ,CAAAC,cAAA,iBAAY,kBACG,gBACA;MAAAD,EAAA,CAAAE,MAAA,kBAAM;MAErBF,EAFqB,CAAAG,YAAA,EAAY,EACjB,EACH;MAGXH,EADF,CAAAC,cAAA,kBAAa,eACD;MACRD,EAAA,CAAAmC,UAAA,IAAAC,gCAAA,sBAAqC;MAOzCpC,EADE,CAAAG,YAAA,EAAW,EACC;;;MAPiBH,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAqC,UAAA,YAAAH,GAAA,CAAArB,KAAA,CAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}